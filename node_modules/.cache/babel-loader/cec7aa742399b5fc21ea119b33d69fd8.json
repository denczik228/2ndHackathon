{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laure\\\\Desktop\\\\Hackathon_2\\\\2ndHackathon\\\\src\\\\components\\\\BudgetCard.js\";\nimport { Button, Card, ProgressBar, Stack } from \"react-bootstrap\";\nimport { currencyFormatter } from \"../utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BudgetCard(_ref) {\n  let {\n    name,\n    amount,\n    max,\n    gray,\n    hideButtons,\n    onAddExpenseClick,\n    onViewExpensesClick\n  } = _ref;\n  const classNames = []; //if expense amount is higher than maximum amount, set card background to red\n\n  if (amount > max) {\n    classNames.push(\"bg-danger\", \"bg-opacity-9\"); //otherwise set card background to gray\n  } else if (gray) {\n    classNames.push(\"bg-light\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classNames.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"border border-primary\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"d-flex justify-content-between align-items-baseline fw-normal mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-2\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-baseline\",\n          children: [currencyFormatter.format(amount), max &&\n          /*#__PURE__*/\n          // sets NIS currency\n          _jsxDEV(\"span\", {\n            className: \"text-muted fs-6 ms-1\",\n            children: [\"/ \", currencyFormatter.format(max)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), max && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"rounded-pill\" // variant = color\n        ,\n        variant: getProgressBarVariant(amount, max),\n        min: 0,\n        max: max,\n        now: amount,\n        label: `${Math.ceil(amount / max * 100)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), !hideButtons && /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: \"2\",\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Button // variant = color\n        , {\n          variant: \"outline-dark\",\n          className: \"border border-primary ms-auto\",\n          onClick: onAddExpenseClick,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"border border-warning\",\n          onClick: onViewExpensesClick,\n          variant: \"outline-secondary\",\n          children: \"View Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} //set ProgressBar color depending on amount \n\n_c = BudgetCard;\n\nfunction getProgressBarVariant(amount, max) {\n  const ratio = amount / max; //if amount is under 50% set progressBar color to blue\n\n  if (ratio < 0.5) return \"primary\"; //if amount is between 50-75% set progressBar color to yellow\n\n  if (ratio < 0.75) return \"warning\"; //otherwise set progressBar color red\n\n  return \"danger\";\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetCard\");","map":{"version":3,"sources":["C:/Users/laure/Desktop/Hackathon_2/2ndHackathon/src/components/BudgetCard.js"],"names":["Button","Card","ProgressBar","Stack","currencyFormatter","BudgetCard","name","amount","max","gray","hideButtons","onAddExpenseClick","onViewExpensesClick","classNames","push","join","format","getProgressBarVariant","Math","ceil","ratio"],"mappings":"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","sourcesContent":["import { Button, Card, ProgressBar, Stack } from \"react-bootstrap\"\r\nimport { currencyFormatter } from \"../utilities\"\r\n\r\nexport default function BudgetCard({\r\n  name,\r\n  amount,\r\n  max,\r\n  gray,\r\n  hideButtons,\r\n  onAddExpenseClick,\r\n  onViewExpensesClick,\r\n}) {\r\n  const classNames = []\r\n  //if expense amount is higher than maximum amount, set card background to red\r\n  if (amount > max) {\r\n    classNames.push(\"bg-danger\", \"bg-opacity-9\")\r\n    //otherwise set card background to gray\r\n  } else if (gray) {\r\n    classNames.push(\"bg-light\")\r\n  }\r\n\r\n  return (\r\n    <Card className={classNames.join(\" \")}>\r\n      <Card.Body className='border border-primary'>\r\n        <Card.Title className=\"d-flex justify-content-between align-items-baseline fw-normal mb-3\">\r\n          <div className=\"me-2\">{name}</div>\r\n          <div className=\"d-flex align-items-baseline\">\r\n            {currencyFormatter.format(amount)}\r\n            {max && (\r\n              // sets NIS currency\r\n              <span className=\"text-muted fs-6 ms-1\">\r\n                / {currencyFormatter.format(max)}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </Card.Title>\r\n        {max && (\r\n          <ProgressBar \r\n            className=\"rounded-pill\"\r\n            // variant = color\r\n            variant={getProgressBarVariant(amount, max)}\r\n            min={0}\r\n            max={max}\r\n            now={amount}\r\n            label={`${Math.ceil((amount/max)*100)}%`}\r\n          />\r\n        )}\r\n        {!hideButtons && (\r\n          <Stack direction=\"horizontal\" gap=\"2\" className=\"mt-4\">\r\n            <Button\r\n              // variant = color\r\n              variant=\"outline-dark\"\r\n              className=\"border border-primary ms-auto\"\r\n              onClick={onAddExpenseClick}\r\n            >\r\n              Add Expense\r\n            </Button>\r\n             {/* variant = color */}\r\n            <Button className='border border-warning' onClick={onViewExpensesClick} variant=\"outline-secondary\">\r\n              View Expenses\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n//set ProgressBar color depending on amount \r\nfunction getProgressBarVariant(amount, max) {\r\n  const ratio = amount / max\r\n  //if amount is under 50% set progressBar color to blue\r\n  if (ratio < 0.5) return \"primary\"\r\n  //if amount is between 50-75% set progressBar color to yellow\r\n  if (ratio < 0.75) return \"warning\"\r\n  //otherwise set progressBar color red\r\n  return \"danger\"\r\n}\r\n"]},"metadata":{},"sourceType":"module"}