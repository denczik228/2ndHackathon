{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; //saves on local storage\n\nexport default function useLocalStorage(key, defaultValue) {\n  _s();\n\n  //gets value from local storage\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(key);\n    if (jsonValue != null) return JSON.parse(jsonValue); //checks to see if defaultValue is a function \n    //because useState can handle a value or function\n\n    if (typeof defaultValue === \"function\") {\n      return defaultValue();\n    } else {\n      return defaultValue;\n    }\n  }); //to update local storage\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"3OMqNhMR3D5p/aTS+W0ePmMRUHU=\");","map":{"version":3,"sources":["C:/Users/laure/Desktop/Hackathon_2/2ndHackathon/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","useLocalStorage","key","defaultValue","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAAA;;AACzD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAM;AACvC,UAAMO,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAlB;AACA,QAAII,SAAS,IAAI,IAAjB,EAAuB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP,CAFgB,CAGvC;AACA;;AACA,QAAI,OAAOH,YAAP,KAAwB,UAA5B,EAAwC;AACtC,aAAOA,YAAY,EAAnB;AACD,KAFD,MAEO;AACL,aAAOA,YAAP;AACD;AACF,GAViC,CAAlC,CAFyD,CAazD;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACI,OAAb,CAAqBT,GAArB,EAA0BO,IAAI,CAACG,SAAL,CAAeR,KAAf,CAA1B;AACD,GAFQ,EAEN,CAACF,GAAD,EAAME,KAAN,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;GAnBuBJ,e","sourcesContent":["import { useState, useEffect } from \"react\"\r\n//saves on local storage\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  //gets value from local storage\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(key)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    //checks to see if defaultValue is a function \r\n    //because useState can handle a value or function\r\n    if (typeof defaultValue === \"function\") {\r\n      return defaultValue()\r\n    } else {\r\n      return defaultValue\r\n    }\r\n  })\r\n  //to update local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }, [key, value])\r\n\r\n  return [value, setValue]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}